post:
  operationId: createDelivery
  tags: [Deliveries]
  summary: Create a delivery
  description: |
    When the default service type is set to "Trexity Select" from the Merchant UI for a location
    then the following changes apply:
    - The "containsAlcohol" field will not be able to be set to "true".
    - The "requirements.perishable" field will not be able to be set to "true".
    - The "requirements.returnReusables" field will not be able to be set to "true".
    - The Parcel "requiresPersonHandoff" field will not be able to be set to "true".
    - The supported pickup windows will change as outlined in this article.
    
    If you want to schedule a shipment, please use exactly one of:
      1) pickupStartAt and an optional pickupEndAt (when to pickup by)
      2) deliverStartAt and an optional deliverEndAt (when to deliver by)

    ---

    Create a new delivery.

    If no `pickupAddress` is specified then the merchant's business address will be used as the pickup address.
  x-codeSamples:
    - $ref: ../../code_samples/Shell/deliveries/create-delivery.yaml

  ##############################################################################

  requestBody:
    description: Payload describing your delivery
    required: true
    content:
      application/json:
        schema:
          $ref: ../../components/schemas/DeliveryDTO.yaml

  responses:
    '500':
      description: Unknown server problem
    '400':
      description: Invalid payload or permission denied.
      content:
        application/json:
            schema:
              type: object
              properties:
                error: { type: string, nullable: true }
                params: { type: object, nullable: true }
                code:
                  type: string
                  nullable: true
                  description: |
                    Unexhaustive list of codes.

                    - `unauthorized-requirements` = When the requirements specified don't match the requirements granted to the merchant
                    - `pickup-address-unserviceable` = When the pickup address cannot be matched to any of the merchant's locations
                    - `invalid-pickup-address` = When the pickup address is invalid
                    - `invalid-delivery-address` = When the delivery address is invalid
                    - `pickup-point-outside-zone` = When the pickup address is outside Trexity's service area
                    - `invalid-input` = When there are issues with the input data provided
                    - `invalid-delivery-data` = When there are issues with the input data provided and the shipment entity cannot be instantiated
                    - `num-labels-too-large` = When numLabels is too large
                    - `invalid-scanids` = When the scanId specified is already in use
                    - `outside-operating-hours` = When the pickup or delivery time specified is outside the your delivery hours or Trexity's service hours
                    - `invalid-scheduled-posting-date` = The scheduling fields are invalid and do not describe a valid pickup window
                    - `unauthorized-numlabels` = When total numLabels for the entire shipment is too large
                    - `pickup-address-outsidetaxboundary` = The pickup address is outside the merchant's location province
                    - `merchant-disabled` = The merchant has been disabled
                    - `missing-profile-details` = The merchant has an incomplete profile
                    - `no-shipment-rate` = A delivery rate failed to be calculated due to delivery or pickup address geofencing error
    '200':
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  shipmentId:
                    type: string
                  parcels:
                    type: array
                    description: |
                      The IDs of the parcels that were created as part of this delivery.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
          examples:
            Success:
              value:
                data:
                  routeId: 'TRX973036599-6KL'
                  deliveryId: '123e4567-e89b-12d3-a456-426614174000'

get:
  operationId: getDeliveries
  tags: [Deliveries]
  summary: List deliveries
  description: |
    List deliveries that match the specified filters.

    ## Filtering By Dates

    When filtering by a date range both the `fromDate` and `toDate` query parameters must be provided.

    ## Filtering By External ID

    When filtering by a delivery's external ID you **cannot filter by dates**. Filtering by dates and external ID are mutually exclusive filters. If `externalId` is specified it will take precendence.    
  x-codeSamples:
    - $ref: ../../code_samples/Shell/deliveries/get-deliveries.yaml

  ##############################################################################

  parameters:
    - in: query
      name: select
      schema:
        type: string
      description: |
        The comma-separated list of fields to include in the delivery response (if not specified or blank then all fields will be included).

        If a field is specified that is not defined by the Delivery object, then responds with HTTP 400. Only top-level fields are supported.
    - in: query
      name: fromDate
      schema:
        $ref: ../../components/schemas/SimplifiedDateISOString.yaml
    - in: query
      name: toDate
      schema:
        $ref: ../../components/schemas/SimplifiedDateISOString.yaml
    - in: query
      name: externalId
      schema:
        type: string
        maxLength: 256
        description: |
          The ID of the external entity that is associated to this delivery (e.g. the external order or shipment ID).
  responses:
    '400':
      description: Select contains a field not in a Delivery object, query params invalid, or permission denied.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
                example: Invalid data payload
    '200':
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../../components/schemas/Delivery.yaml

