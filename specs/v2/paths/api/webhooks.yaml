get:
  operationId: listWebhooks
  tags: [Webhooks]
  summary: List webhooks
  description: |
    List registered webhooks or registered webhooks for an event.

  parameters:
    - in: query
      name: eventName
      schema:
        $ref: ../../components/schemas/WebhookEventName.yaml

  responses:
    '200':
      description: List registered webhooks
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../../components/schemas/Webhook.yaml
    '400':
      $ref: ../../components/error-responses/400.yaml
    '500':
      $ref: ../../components/error-responses/500.yaml

post:
  operationId: createWebhook
  tags: [Webhooks]
  summary: Create webhook
  description: |
    Create a new webhook for the specified event.

    All webhook requests will have the following headers:
    - x-trexity-event-name = the event name
    - x-trexity-signature = the SHA256 HMAC signature of the request
    - x-trexity-webhook-order-id = the processing order of the webhook used to determine what order webhooks should be processed in

    All webhook requests will have the following payload:
    - timestamp = the date and time the event took place in Simplified ISO8601 format (e.g. 2020-07-25T10:48:08.987Z)
    - data = the delivery object that changed, same as returned from the [get delivery endpoint](#tag/Deliveries/operation/getDelivery)

  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required: [eventName, url]
          properties:
            eventName:
              $ref: ../../components/schemas/WebhookEventName.yaml
            url:
              type: string
              format: uri
              description: Secure (https://...) URL to send the webhook request to.
              example: https://example.com/trexity/webhook-handler
  responses:
    '200':
      description: Successfully register a webhook.
      content:
        application/json:
          schema:
            type: object
            required: [data]
            properties:
              data:
                required: [webhookId]
                properties:
                  webhookId:
                    type: string
    '400':
      $ref: ../../components/error-responses/400.yaml
    '500':
      $ref: ../../components/error-responses/500.yaml
