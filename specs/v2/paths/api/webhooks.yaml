post:
  operationId: createWebhook
  tags: [Webhooks]
  summary: Create webhook
  description: |
    Create a new webhook for the specified event.

  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required: [eventName, url]
          properties:
            eventName:
              $ref: ../../components/schemas/WebhookEventName.yaml
            url:
              type: string
              format: uri
              description: Secure (https://...) URL to send the webhook request to.
              example: https://example.com/trexity/webhook-handler
  responses:
    '200':
      description: Successfully register a webhook.
      content:
        application/json:
          schema:
            type: object
            required: [data]
            properties:
              data:
                $ref: ../../components/schemas/Webhook.yaml
    '400':
      $ref: ../../components/responses/400.yaml
    '401':
      $ref: ../../components/responses/401.yaml
    '403':
      $ref: ../../components/responses/403.yaml
    '500':
      $ref: ../../components/responses/500.yaml

get:
  operationId: listWebhooks
  tags: [Webhooks]
  summary: List webhooks
  description: |
    List all registered webhooks or registered webhooks for an event.

  parameters:
    - in: query
      name: eventName
      schema:
        $ref: ../../components/schemas/WebhookEventName.yaml

  responses:
    '200':
      description: List registered webhooks
      content:
        application/json:
          schema:
            type: object
            required: [data]
            properties:
              data:
                type: array
                items:
                  $ref: ../../components/schemas/Webhook.yaml
    '400':
      $ref: ../../components/responses/400.yaml
    '401':
      $ref: ../../components/responses/401.yaml
    '403':
      $ref: ../../components/responses/403.yaml
    '500':
      $ref: ../../components/responses/500.yaml
