post:
  operationId: createRoutingRequest
  tags: [Routing]
  summary: Create routing request
  description: |
    Queue a list of parcels to be routed and added to optimized shipments.

    **NOTE: This request performs a complex route optimization operation. This may take up to
    several minutes to complete. Keep this in mind when setting values for the timing
    properties `scheduledPostAt`, `deliverAfter` and `deliverBefore`. After the operation
    completes the `scheduledPostAt` could be in the past and shipments could be posted
    immediately after they are created.**

    The typical use case of this API is to select all your parcels and
    provide in bulk to this endpoint, which responds with an asynchronous routing
    request ID. Then use this asynchronous routing request ID to obtain the
    status of the routing request and later the result.

    **Order ID**

    For each parcel provided to this endpoint, the `orderId` must be unique among
    all parcels. This allows us to refer back to the parcel by `orderId` in the
    result `errors` array.

    **Scheduled Post At**

    If `scheduledPostAt` is not given and `deliverAfter` and `deliverBefore` are provided
    then a value for `scheduledPostAt` will be estimated and computed for each shipment payload.

    **Note on Optimization**
    This endpoint does not use our most up-to-date routing optimization technology. We
    recommend using the [Complex Rate](/#operation/createComplexRateRequest) endpoint instead.

    **(deprecated in v1.8)** Use the new [Complex Rate](/#operation/createComplexRateRequest)
    endpoint, combined with the [Create Shipments](/#operation/createCreateBulkShipmentsRequest) endpoint.

    **(new in v1.10)** The new properties `deliverAfter` and `deliverBefore` can be provided that describe a
    delivery window for delivery. From these values a `scheduledPostAt` will be estimated and used when creating shipments.

  ##############################################################################

  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required: [parcels]
          properties:
            parcels:
              type: array
              minItems: 1
              maxItems: 400
              items:
                $ref: ../../components/schemas/payloads/DirectShipmentPayload.yaml
  responses:
    '200':
      description: Successfully queued an asynchronous routing request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../../components/schemas/responses/RoutingStatusResponse.yaml
    '400':
      description: |
        Invalid input provided such as invalid address, etc. No routing request
        is scheduled when input errors are detected.
      content:
        application/json:
          schema:
            type: object
            required: [error]
            properties:
              error: { type: string }
