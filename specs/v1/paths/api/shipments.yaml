post:
  operationId: createShipment
  tags: [Shipments]
  summary: Create a shipment
  description: |
    **(CHANGE AS OF NOVEMBER 14, 2023)** The concept of a "service type" was introduced
    and will by default have no change on the API. However, each merchant location from
    the Merchant portal can have the default service type can be changed to "Trexity Standard".

    When the default service type is set to "Trexity Standard" from the Merchant UI for a location
    then the following changes apply:
    - The "containsAlcohol" field will not be able to be set to "true".
    - The "requirements.perishable" field will not be able to be set to "true".
    - The "requirements.returnReusables" field will not be able to be set to "true".
    - The Parcel "requiresPersonHandoff" field will not be able to be set to "true".
    - The supported pickup windows will change as outlined in this article.

    **(CHANGE AS OF JUNE 1, 2023)** scheduledPostAt is considered deprecated. It is still supported, but at some point in the future, it will not be.
    If you want to schedule a shipment, please use exactly one of:
      1) pickupStartAt and an optional pickupEndAt (when to pickup by)
      2) deliverStartAt and an optional deliverEndAt (when to deliver by)

    If providing a value for `scheduledPostAt` then an approximate value for `pickupStartAt` will attempt to be calculated. If an appproximation
    cannot be determined, then the shipment will be created as a draft and an email will be sent off to the merchant asking them to schedule
    the shipment for pickup.

    ---

    Create a new shipment.

    If no `pickupAddress` is specified then the merchant's business address will be used as the pickup address.
  x-codeSamples:
    - $ref: ../../code_samples/Shell/shipments/create-shipment.yaml

  ##############################################################################

  requestBody:
    description: Payload describing your shipment
    required: true
    content:
      application/json:
        schema:
          $ref: ../../components/schemas/payloads/CreateShipmentPayload.yaml
        examples:
          ImmediateInit:
            value:
              pickupAddress: '9 Slack Rd, Nepean ON K2G 0B7, CA'
              pickupInstructions: 'Please be careful, since it may contain fragile things!'
              requirements: {}
              parcels:
                - deliveryAddress: '207 Queen St, Ottawa ON K1P 6E5, CA'
                  deliveryName: 'Srinivasa Ramanujan'
                  description: 'Glasses, bifocals'
                  orderId: 'BFG10K'
                  parcelValue: 10000
          ScheduledInit:
            value:
              pickupAddress: '207 Queen St, Ottawa ON K1P 6E5, CA'
              pickupInstructions: 'Please be careful, since it may contain fragile things!'
              requirements: {}
              scheduledPostAt: '2020-07-25T10:16:11.048Z'
              parcels:
                - deliveryAddress: '343 Booth St, Ottawa ON K1R 7K1, CA'
                  deliveryName: 'Lagrange'
                  description: 'Copy of Newtons Principia Mathematica'
                  orderId: 'NWTNRULZ'
                  parcelValue: 15000
  responses:
    '500':
      description: Unknown server problem
    '400':
      description: Invalid payload or permission denied.
      content:
        application/json:
            schema:
              type: object
              properties:
                error: { type: string, nullable: true }
                params: { type: object, nullable: true }
                code:
                  type: string
                  nullable: true
                  description: |
                    Unexhaustive list of codes.

                    - `unauthorized-requirements` = When the requirements specified don't match the requirements granted to the merchant
                    - `pickup-address-unserviceable` = When the pickup address cannot be matched to any of the merchant's locations
                    - `invalid-pickup-address` = When the pickup address is invalid
                    - `invalid-delivery-address` = When the delivery address is invalid
                    - `pickup-point-outside-zone` = When the pickup address is outside Trexity's service area
                    - `invalid-input` = When there are issues with the input data provided
                    - `invalid-shipment-data` = When there are issues with the input data provided and the shipment entity cannot be instantiated
                    - `num-labels-too-large` = When numLabels is too large
                    - `invalid-scanids` = When the scanId specified is already in use
                    - `outside-operating-hours` = When the pickup or delivery time specified is outside the your delivery hours or Trexity's service hours
                    - `invalid-scheduled-posting-date` = The scheduling fields are invalid and do not describe a valid pickup window
                    - `unauthorized-numlabels` = When total numLabels for the entire shipment is too large
                    - `pickup-address-outsidetaxboundary` = The pickup address is outside the merchant's location province
                    - `merchant-disabled` = The merchant has been disabled
                    - `missing-profile-details` = The merchant has an incomplete profile
                    - `no-shipment-rate` = A shipment rate failed to be calculated due to delivery or pickup address geofencing error
    '200':
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  shipmentId:
                    type: string
          examples:
            Success:
              value:
                data:
                  shipmentId: 'TRX973036599-6KL'

get:
  operationId: getShipments
  tags: [Shipments]
  summary: List shipments
  description: |
    List shipments that match the specified filters.

    ## Filtering By Dates

    When filtering by a date range both the `fromDate` and `toDate` query parameters must be provided.

    ## Filtering By External ID

    When filtering by a parcel's external ID you **cannot filter by dates**. Filtering by dates and external ID are mutually exclusive filters. If `externalId` is specified it will take precendence.
    **(ADDED IN v1.2)**

    ## Filtering By Parcel Metadata
    **(DEPRECATED AS OF v1.2)**

    ~~Parcel metadata fields can be filtered on by using query parameters with the following pattern `meta_{fieldName}`.~~

    ~~Additionally, the metadata field must have been saved as a string, and not a number for example. This is required since
    the query parameter value is not converted to a number.~~

    ~~Example: `https://{server-url}/shipments?meta_partnerShipmentId=someid`~~
  x-codeSamples:
    - $ref: ../../code_samples/Shell/shipments/get-shipments.yaml

  ##############################################################################

  parameters:
    - in: query
      name: select
      schema:
        type: string
      description: |
        **(ADDED IN v1.22)** The comma-separated list of fields to include in the shipment response (if not specified or blank then all fields will be included).

        If a field is specified that is not defined by the Shipment object, then responds with HTTP 400. Only top-level fields are supported.
    - in: query
      name: fromDate
      schema:
        $ref: ../../components/schemas/SimplifiedDateISOString.yaml
    - in: query
      name: toDate
      schema:
        $ref: ../../components/schemas/SimplifiedDateISOString.yaml
    - in: query
      name: externalId
      schema:
        type: string
        maxLength: 256
        description: |
          **(ADDED IN v1.2)** The ID of the external entity that is associated to this parcel (e.g. the external order or shipment ID).
    - in: query
      name: merchantPpid
      deprecated: true
      description: |
        **(DEPRECATED AS OF v1.1)**
      schema:
        type: string
  responses:
    '400':
      description: Select contains a field not in a Shipment object, query params invalid, or permission denied.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
                example: Invalid data payload
    '200':
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../../components/schemas/Shipment.yaml

