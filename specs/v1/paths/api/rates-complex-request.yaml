post:
  tags:
    - Shipping Rates
  operationId: createComplexRateRequest
  summary: Create complex rate request
  description: |
    Queue a list of shipments for optimal routing and pricing.

    The typical use case of this API is to provide multiple shipments (pickup &
    delivery) to this endpoint, which responds with a request ID to be polled
    asynchronously using the [Complex Rate Status](/#operation/getComplexRateStatus) endpoint, and ultimately
    retrieving the rate using the [Complex Rate Result](/#operation/getComplexRateResult) endpoint.

    Optionally, you can then take the rate ID provided in the rate result and
    have the shipments created in bulk using the [Create Shipments](/#operation/createShipments)
    endpoint.

    **Order ID**

    For each parcel in the shipments provided to this endpoint, the `orderId`
    must be unique. This allows us to refer back to the parcel by `orderId`
    in the result `errors` array.

    **Scheduled Post At**

    Values for `scheduledPostAt` must be a date at least 1 hour from the time of
    the request. This helps to ensure that there is enough time for the optional
    [bulk shipment creation](/#operation/createShipments) request to be
    performed and fully completed before the driver network is notified of the
    deliveries.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required: [shipments]
          properties:
            shipments:
              type: array
              minItems: 1
              maxItems: 400
              items:
                $ref: ../../components/schemas/payloads/CreateShipmentPayload.yaml
  responses:
    '200':
      description: Successfully queued an asynchronous rate request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../../components/schemas/responses/RateComplexStatusResponse.yaml
    '400':
      description: |
        Invalid input provided such as invalid address, etc.
      content:
        application/json:
          schema:
            type: object
            required: [error]
            properties:
              error: { type: string }
