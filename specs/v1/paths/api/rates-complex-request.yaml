post:
  operationId: createComplexRateRequest
  tags: [Shipping Rates]
  summary: Create complex rate request
  description: |
    Queue a list of shipments for an optimally routed rate.

    The typical use case of this API is to provide multiple shipments (pickup &
    delivery) to this endpoint, which responds with a request ID to be polled
    asynchronously using the [Complex Rate status](/#operation/getComplexRateStatus)
    endpoint, and ultimately retrieving the rate using the [Complex Rate result](/#operation/getComplexRateResult)
    endpoint.

    Optionally, you can then take the rate ID provided in the rate result and
    have the shipments created in bulk using the [Create Bulk Shipments](/#operation/createCreateBulkShipmentsRequest)
    endpoint.

    **Parcels**

    We recommend structuring the request so as to have a shipment for each
    parcel, where the parcels property is always an array with a single parcel.

    Grouping parcels into the same shipment does not currently maintain
    affinity. Parcels will be re-arranged as needed by the optimization
    algorithm.

    **Order ID**

    For each parcel across all shipments provided to this endpoint, the
    `orderId` must be unique. This allows us to refer back to the parcel by
    `orderId` in the result `errors` array.

    **Scheduled Post At**

    Values for `scheduledPostAt` must be a date at least 1 hour from the time of
    the request. This helps to ensure that there is enough time for the optional
    [Create Bulk Shipments](/#operation/createCreateBulkShipmentsRequestRequest)
    request to be performed and fully completed before the driver network is
    notified of the deliveries.

  ##############################################################################

  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required: [shipments]
          properties:
            shipments:
              type: array
              minItems: 1
              maxItems: 400
              items:
                $ref: ../../components/schemas/payloads/CreateShipmentPayload.yaml
  responses:
    '200':
      description: Successfully queued an asynchronous complex rate request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../../components/schemas/responses/RateComplexStatusResponse.yaml
    '400':
      description: |
        Invalid input provided such as invalid address, etc.
      content:
        application/json:
          schema:
            type: object
            required: [error]
            properties:
              error: { type: string }
